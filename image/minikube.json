{
    "variables": {
        "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
        "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}"
    },
    "builders": [{
        "type": "amazon-ebs",
        "access_key": "{{user `aws_access_key`}}",
        "secret_key": "{{user `aws_secret_key`}}",
        "region": "eu-central-1",
        "source_ami": "ami-1e339e71",
        "instance_type": "t2.small",
        "ssh_username": "ubuntu",
        "ami_name": "shipyard minikube {{timestamp}}"
    }],

    "provisioners": [{
        "type": "shell",
        "inline": [
            "curl -s -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl",
            "chmod +x ./kubectl",
            "sudo mv ./kubectl /usr/local/bin",

            "curl -s -Lo minikube https://storage.googleapis.com/minikube/releases/v0.22.3/minikube-linux-amd64",
            "chmod +x ./minikube",
            "sudo mv ./minikube /usr/local/bin",

            "sudo apt update",
            "sudo DEBIAN_FRONTEND=noninteractive apt upgrade -y",

            "sudo apt install -y apt-transport-https ca-certificates software-properties-common",
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -",
            "sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"",
            "sudo apt update",
            "sudo apt install -y docker-ce",

            "sudo apt install -y socat",

            "echo FIX ME: two calls to *minikube start* are needed, the first one does not create the required systemd units",
            "echo upstream issue: https://github.com/kubernetes/minikube/issues/2138",
            "sudo CHANGE_MINIKUBE_NONE_USER=true minikube start --extra-config=apiserver.Authorization.Mode=RBAC --vm-driver=none -v 3",
            "sudo CHANGE_MINIKUBE_NONE_USER=true minikube start --extra-config=apiserver.Authorization.Mode=RBAC --vm-driver=none -v 3",
            "sudo systemctl enable --now localkube.service",

            "while ! kubectl get svc | grep -Pz \"kubernetes *\"; do echo waiting for kubernetes svc...; sleep 20; done"
        ]
    }]
}
